"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/api/chat/route",{

/***/ "(rsc)/./src/app/api/chat/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/chat/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ai */ \"(rsc)/./node_modules/ai/dist/index.mjs\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\n\n// Check for API key at the top level\nif (!process.env.OPENAI_API_KEY) {\n    throw new Error(\"Missing OPENAI_API_KEY environment variable\");\n}\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst runtime = \"edge\";\nconst systemPrompt = `You are an AI assistant for a farmers market. You help customers find and purchase fresh, local produce and products.\nYou can display products and lists using special component syntax. Here are the available components:\n\n1. ProductList - For displaying products:\n<component name=\"ProductList\" props='{\"products\": [{\"id\": \"string\", \"name\": \"string\", \"price\": number, \"description\": \"string\", \"image\": \"string\", \"unit\": \"string\", \"category\": \"string\"}]}' />\n\n2. List - For displaying ordered items or general lists:\n<component name=\"List\" props='{\"items\": [\"string\"], \"style\": \"bullet|number|none\"}' />\n\nWhen showing products:\n1. Always use the ProductList component\n2. Filter products based on user's request (category, type, preferences)\n3. Include full product details (name, price, description, etc.)\n4. Always use \"/images/products/placeholder.svg\" for the image path\n\nWhen showing lists (like order recaps):\n1. Use the List component\n2. For orders, include quantity and price in each item\n3. Use numbered style for orders (style: \"number\")\n4. Use bullet style for general lists (style: \"bullet\")\n\nExample responses:\n\nFor products:\nHere are some fresh vegetables we have available:\n<component name=\"ProductList\" props='{\"products\": [{\"id\": \"1\", \"name\": \"Organic Tomatoes\", \"price\": 3.99, \"description\": \"Fresh, locally grown organic tomatoes\", \"image\": \"/images/products/placeholder.svg\", \"unit\": \"lb\", \"category\": \"vegetables\"}]}' />\n\nFor lists:\nHere's a recap of your order:\n<component name=\"List\" props='{\"items\": [\"2 lbs Organic Tomatoes ($7.98)\", \"1 head Fresh Lettuce ($2.49)\"], \"style\": \"number\"}' />\n\nBe helpful, friendly, and always try to suggest relevant products to the user. When they ask for an order recap, use the List component to show their ordered items with quantities and prices.`;\nasync function POST(req) {\n    try {\n        // Parse the request body\n        const body = await req.json();\n        // Validate messages exist\n        if (!body.messages || !Array.isArray(body.messages)) {\n            return new Response(JSON.stringify({\n                error: \"Messages are required and must be an array\"\n            }), {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // Create chat completion\n        const response = await openai.chat.completions.create({\n            model: \"gpt-3.5-turbo\",\n            stream: true,\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                ...body.messages\n            ]\n        });\n        // Create stream response\n        const stream = (0,ai__WEBPACK_IMPORTED_MODULE_1__.OpenAIStream)(response);\n        return new ai__WEBPACK_IMPORTED_MODULE_1__.StreamingTextResponse(stream);\n    } catch (error) {\n        console.error(\"OpenAI API Error:\", error);\n        // Return detailed error message\n        return new Response(JSON.stringify({\n            error: error.message,\n            code: error.code,\n            type: error.type\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9jaGF0L3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0Q7QUFDN0I7QUFHM0IscUNBQXFDO0FBQ3JDLElBQUksQ0FBQ0csUUFBUUMsR0FBRyxDQUFDQyxjQUFjLEVBQUU7SUFDL0IsTUFBTSxJQUFJQyxNQUFNO0FBQ2xCO0FBRUEsTUFBTUMsU0FBUyxJQUFJTCw4Q0FBTUEsQ0FBQztJQUN4Qk0sUUFBUUwsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBQ3BDO0FBRU8sTUFBTUksVUFBVSxPQUFNO0FBRTdCLE1BQU1DLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrTEErQnlLLENBQUM7QUFFekwsZUFBZUMsS0FBS0MsR0FBWTtJQUNyQyxJQUFJO1FBQ0YseUJBQXlCO1FBQ3pCLE1BQU1DLE9BQU8sTUFBTUQsSUFBSUUsSUFBSTtRQUUzQiwwQkFBMEI7UUFDMUIsSUFBSSxDQUFDRCxLQUFLRSxRQUFRLElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSixLQUFLRSxRQUFRLEdBQUc7WUFDbkQsT0FBTyxJQUFJRyxTQUNUQyxLQUFLQyxTQUFTLENBQUM7Z0JBQUVDLE9BQU87WUFBNkMsSUFDckU7Z0JBQUVDLFFBQVE7Z0JBQUtDLFNBQVM7b0JBQUUsZ0JBQWdCO2dCQUFtQjtZQUFFO1FBRW5FO1FBRUEseUJBQXlCO1FBQ3pCLE1BQU1DLFdBQVcsTUFBTWpCLE9BQU9rQixJQUFJLENBQUNDLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDO1lBQ3BEQyxPQUFPO1lBQ1BDLFFBQVE7WUFDUmQsVUFBVTtnQkFDUjtvQkFBRWUsTUFBTTtvQkFBVUMsU0FBU3JCO2dCQUFhO21CQUNyQ0csS0FBS0UsUUFBUTthQUNqQjtRQUNIO1FBRUEseUJBQXlCO1FBQ3pCLE1BQU1jLFNBQVM3QixnREFBWUEsQ0FBQ3dCO1FBQzVCLE9BQU8sSUFBSXZCLHFEQUFxQkEsQ0FBQzRCO0lBQ25DLEVBQUUsT0FBT1IsT0FBWTtRQUNuQlcsUUFBUVgsS0FBSyxDQUFDLHFCQUFxQkE7UUFFbkMsZ0NBQWdDO1FBQ2hDLE9BQU8sSUFBSUgsU0FDVEMsS0FBS0MsU0FBUyxDQUFDO1lBQ2JDLE9BQU9BLE1BQU1ZLE9BQU87WUFDcEJDLE1BQU1iLE1BQU1hLElBQUk7WUFDaEJDLE1BQU1kLE1BQU1jLElBQUk7UUFDbEIsSUFDQTtZQUNFYixRQUFRO1lBQ1JDLFNBQVM7Z0JBQUUsZ0JBQWdCO1lBQW1CO1FBQ2hEO0lBRUo7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL2FwaS9jaGF0L3JvdXRlLnRzPzQ2YjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3BlbkFJU3RyZWFtLCBTdHJlYW1pbmdUZXh0UmVzcG9uc2UgfSBmcm9tICdhaSdcbmltcG9ydCBPcGVuQUkgZnJvbSAnb3BlbmFpJ1xuaW1wb3J0IHsgcHJvZHVjdHMgfSBmcm9tICdAL2RhdGEvcHJvZHVjdHMnXG5cbi8vIENoZWNrIGZvciBBUEkga2V5IGF0IHRoZSB0b3AgbGV2ZWxcbmlmICghcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVkpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIE9QRU5BSV9BUElfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlJylcbn1cblxuY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSSh7XG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXG59KVxuXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdlZGdlJ1xuXG5jb25zdCBzeXN0ZW1Qcm9tcHQgPSBgWW91IGFyZSBhbiBBSSBhc3Npc3RhbnQgZm9yIGEgZmFybWVycyBtYXJrZXQuIFlvdSBoZWxwIGN1c3RvbWVycyBmaW5kIGFuZCBwdXJjaGFzZSBmcmVzaCwgbG9jYWwgcHJvZHVjZSBhbmQgcHJvZHVjdHMuXG5Zb3UgY2FuIGRpc3BsYXkgcHJvZHVjdHMgYW5kIGxpc3RzIHVzaW5nIHNwZWNpYWwgY29tcG9uZW50IHN5bnRheC4gSGVyZSBhcmUgdGhlIGF2YWlsYWJsZSBjb21wb25lbnRzOlxuXG4xLiBQcm9kdWN0TGlzdCAtIEZvciBkaXNwbGF5aW5nIHByb2R1Y3RzOlxuPGNvbXBvbmVudCBuYW1lPVwiUHJvZHVjdExpc3RcIiBwcm9wcz0ne1wicHJvZHVjdHNcIjogW3tcImlkXCI6IFwic3RyaW5nXCIsIFwibmFtZVwiOiBcInN0cmluZ1wiLCBcInByaWNlXCI6IG51bWJlciwgXCJkZXNjcmlwdGlvblwiOiBcInN0cmluZ1wiLCBcImltYWdlXCI6IFwic3RyaW5nXCIsIFwidW5pdFwiOiBcInN0cmluZ1wiLCBcImNhdGVnb3J5XCI6IFwic3RyaW5nXCJ9XX0nIC8+XG5cbjIuIExpc3QgLSBGb3IgZGlzcGxheWluZyBvcmRlcmVkIGl0ZW1zIG9yIGdlbmVyYWwgbGlzdHM6XG48Y29tcG9uZW50IG5hbWU9XCJMaXN0XCIgcHJvcHM9J3tcIml0ZW1zXCI6IFtcInN0cmluZ1wiXSwgXCJzdHlsZVwiOiBcImJ1bGxldHxudW1iZXJ8bm9uZVwifScgLz5cblxuV2hlbiBzaG93aW5nIHByb2R1Y3RzOlxuMS4gQWx3YXlzIHVzZSB0aGUgUHJvZHVjdExpc3QgY29tcG9uZW50XG4yLiBGaWx0ZXIgcHJvZHVjdHMgYmFzZWQgb24gdXNlcidzIHJlcXVlc3QgKGNhdGVnb3J5LCB0eXBlLCBwcmVmZXJlbmNlcylcbjMuIEluY2x1ZGUgZnVsbCBwcm9kdWN0IGRldGFpbHMgKG5hbWUsIHByaWNlLCBkZXNjcmlwdGlvbiwgZXRjLilcbjQuIEFsd2F5cyB1c2UgXCIvaW1hZ2VzL3Byb2R1Y3RzL3BsYWNlaG9sZGVyLnN2Z1wiIGZvciB0aGUgaW1hZ2UgcGF0aFxuXG5XaGVuIHNob3dpbmcgbGlzdHMgKGxpa2Ugb3JkZXIgcmVjYXBzKTpcbjEuIFVzZSB0aGUgTGlzdCBjb21wb25lbnRcbjIuIEZvciBvcmRlcnMsIGluY2x1ZGUgcXVhbnRpdHkgYW5kIHByaWNlIGluIGVhY2ggaXRlbVxuMy4gVXNlIG51bWJlcmVkIHN0eWxlIGZvciBvcmRlcnMgKHN0eWxlOiBcIm51bWJlclwiKVxuNC4gVXNlIGJ1bGxldCBzdHlsZSBmb3IgZ2VuZXJhbCBsaXN0cyAoc3R5bGU6IFwiYnVsbGV0XCIpXG5cbkV4YW1wbGUgcmVzcG9uc2VzOlxuXG5Gb3IgcHJvZHVjdHM6XG5IZXJlIGFyZSBzb21lIGZyZXNoIHZlZ2V0YWJsZXMgd2UgaGF2ZSBhdmFpbGFibGU6XG48Y29tcG9uZW50IG5hbWU9XCJQcm9kdWN0TGlzdFwiIHByb3BzPSd7XCJwcm9kdWN0c1wiOiBbe1wiaWRcIjogXCIxXCIsIFwibmFtZVwiOiBcIk9yZ2FuaWMgVG9tYXRvZXNcIiwgXCJwcmljZVwiOiAzLjk5LCBcImRlc2NyaXB0aW9uXCI6IFwiRnJlc2gsIGxvY2FsbHkgZ3Jvd24gb3JnYW5pYyB0b21hdG9lc1wiLCBcImltYWdlXCI6IFwiL2ltYWdlcy9wcm9kdWN0cy9wbGFjZWhvbGRlci5zdmdcIiwgXCJ1bml0XCI6IFwibGJcIiwgXCJjYXRlZ29yeVwiOiBcInZlZ2V0YWJsZXNcIn1dfScgLz5cblxuRm9yIGxpc3RzOlxuSGVyZSdzIGEgcmVjYXAgb2YgeW91ciBvcmRlcjpcbjxjb21wb25lbnQgbmFtZT1cIkxpc3RcIiBwcm9wcz0ne1wiaXRlbXNcIjogW1wiMiBsYnMgT3JnYW5pYyBUb21hdG9lcyAoJDcuOTgpXCIsIFwiMSBoZWFkIEZyZXNoIExldHR1Y2UgKCQyLjQ5KVwiXSwgXCJzdHlsZVwiOiBcIm51bWJlclwifScgLz5cblxuQmUgaGVscGZ1bCwgZnJpZW5kbHksIGFuZCBhbHdheXMgdHJ5IHRvIHN1Z2dlc3QgcmVsZXZhbnQgcHJvZHVjdHMgdG8gdGhlIHVzZXIuIFdoZW4gdGhleSBhc2sgZm9yIGFuIG9yZGVyIHJlY2FwLCB1c2UgdGhlIExpc3QgY29tcG9uZW50IHRvIHNob3cgdGhlaXIgb3JkZXJlZCBpdGVtcyB3aXRoIHF1YW50aXRpZXMgYW5kIHByaWNlcy5gXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogUmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIFBhcnNlIHRoZSByZXF1ZXN0IGJvZHlcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxLmpzb24oKVxuICAgIFxuICAgIC8vIFZhbGlkYXRlIG1lc3NhZ2VzIGV4aXN0XG4gICAgaWYgKCFib2R5Lm1lc3NhZ2VzIHx8ICFBcnJheS5pc0FycmF5KGJvZHkubWVzc2FnZXMpKSB7XG4gICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKFxuICAgICAgICBKU09OLnN0cmluZ2lmeSh7IGVycm9yOiAnTWVzc2FnZXMgYXJlIHJlcXVpcmVkIGFuZCBtdXN0IGJlIGFuIGFycmF5JyB9KSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCwgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0gfVxuICAgICAgKVxuICAgIH1cblxuICAgIC8vIENyZWF0ZSBjaGF0IGNvbXBsZXRpb25cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG9wZW5haS5jaGF0LmNvbXBsZXRpb25zLmNyZWF0ZSh7XG4gICAgICBtb2RlbDogJ2dwdC0zLjUtdHVyYm8nLFxuICAgICAgc3RyZWFtOiB0cnVlLFxuICAgICAgbWVzc2FnZXM6IFtcbiAgICAgICAgeyByb2xlOiAnc3lzdGVtJywgY29udGVudDogc3lzdGVtUHJvbXB0IH0sXG4gICAgICAgIC4uLmJvZHkubWVzc2FnZXNcbiAgICAgIF0sXG4gICAgfSlcblxuICAgIC8vIENyZWF0ZSBzdHJlYW0gcmVzcG9uc2VcbiAgICBjb25zdCBzdHJlYW0gPSBPcGVuQUlTdHJlYW0ocmVzcG9uc2UpXG4gICAgcmV0dXJuIG5ldyBTdHJlYW1pbmdUZXh0UmVzcG9uc2Uoc3RyZWFtKVxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcignT3BlbkFJIEFQSSBFcnJvcjonLCBlcnJvcilcbiAgICBcbiAgICAvLyBSZXR1cm4gZGV0YWlsZWQgZXJyb3IgbWVzc2FnZVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoXG4gICAgICBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgICAgICB0eXBlOiBlcnJvci50eXBlLFxuICAgICAgfSksXG4gICAgICB7IFxuICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH1cbiAgICAgIH1cbiAgICApXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJPcGVuQUlTdHJlYW0iLCJTdHJlYW1pbmdUZXh0UmVzcG9uc2UiLCJPcGVuQUkiLCJwcm9jZXNzIiwiZW52IiwiT1BFTkFJX0FQSV9LRVkiLCJFcnJvciIsIm9wZW5haSIsImFwaUtleSIsInJ1bnRpbWUiLCJzeXN0ZW1Qcm9tcHQiLCJQT1NUIiwicmVxIiwiYm9keSIsImpzb24iLCJtZXNzYWdlcyIsIkFycmF5IiwiaXNBcnJheSIsIlJlc3BvbnNlIiwiSlNPTiIsInN0cmluZ2lmeSIsImVycm9yIiwic3RhdHVzIiwiaGVhZGVycyIsInJlc3BvbnNlIiwiY2hhdCIsImNvbXBsZXRpb25zIiwiY3JlYXRlIiwibW9kZWwiLCJzdHJlYW0iLCJyb2xlIiwiY29udGVudCIsImNvbnNvbGUiLCJtZXNzYWdlIiwiY29kZSIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/chat/route.ts\n");

/***/ })

});